name: 'C++ CI'

on:
  push:
    branches:
      - master
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      # Установка необходимых библиотеки Boost
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libboost-all-dev

      - name: Build project
        run: |
          mkdir build
          cd build
          # Передача параметров конфигурации, убедитесь, что `-DPATCH_VERSION` и `-DWITH_BOOST_TEST` доступны
          cmake .. -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON
          make
          cpack -G DEB
          
      # Тестирование
      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: List files in build
        run: |
          ls -l build
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/print_ip-0.0.${{ github.run_number }}-Linux.deb
          asset_name: print_ip-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
